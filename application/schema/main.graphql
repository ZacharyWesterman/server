type Query {
	getUser(username: String!): UserQueryReponse!
	listUsers: [String!]!
	countSessions(username: String!): Int!

	getWeatherUsers: [WeatherUser!]!
	getLastWeatherExec: WeatherExecution

	getBlobs(username: String, start: Int!, count: Int!, tags: String): BlobQueryResponse!
	countBlobs(username: String, tags: String): BlobCountResponse!
	getBlob(id: String!): Blob

	getBugReports(username: String, start: Int!, count: Int!, resolved: Boolean!) : [BugReport!]!
	countBugReports(username: String, resolved: Boolean!) : Int!
	getBugReport(id: String!): BugReport
}

type Mutation {
	createUser(username: String!, password: String!): UserCreateResponse!
	deleteUser(username: String!): UserDeleteResponse!
	updateUserTheme(username: String!, theme: UserTheme!): UserUpdateResponse!
	updateUserPerms(username: String!, perms: [String!]!): UserUpdateResponse!
	revokeSessions(username: String!): Int!
	updateUserPassword(username: String!, password: String!): UserUpdateResponse!

	createWeatherUser(userdata: WeatherUserInput!): UserCreateResponse!
	deleteWeatherUser(username: String!): UserDeleteResponse!
	enableWeatherUser(username: String!): UserUpdateResponse!
	disableWeatherUser(username: String!): UserUpdateResponse!
	updateWeatherUser(userdata: WeatherUserInput!): UserUpdateResponse!

	deleteBlob(id: String!): BlobUpdateResponse!
	setBlobTags(id: String!, tags: [String!]!): BlobUpdateResponse!

	reportBug(text: String!): Boolean!
}
