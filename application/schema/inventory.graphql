
type Item {
	id: String!
	created: DateTime!
	creator: UserMinData!
	category: String!
	type: String!
	location: String!
	blob: Blob!
	description: String!
	description_html: String!
}

type InvalidFields {
	message: String!
	fields: [String!]!
}

input InventorySearchFilter {
	owner: String
	category: String
	type: String
	location: String
}

union ItemCreateResponse = Item | InsufficientPerms | InvalidFields

#Resolvers below this line:

extend type Query {
	getInventory(filter: InventorySearchFilter!, start: Int!, count: Int!, sorting: Sorting!): [Item!]!
	countInventory(filter: InventorySearchFilter!): Int!

	getItemCategories: [String!]!
	getItemTypes(category: String!): [String!]!
	getItemLocations(owner: String): [String!]!
}

extend type Mutation {
	createInventoryItem(category: String!, type: String!, location: String!, blob_id: String!, description: String!) : ItemCreateResponse!
}
