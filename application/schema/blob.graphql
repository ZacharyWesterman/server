type Blob {
	id: String!
	created: DateTime!
	creator: String!
	name: String!
	ext: String!
	mimetype: String!
	size: Int!
	tags: [String!]!
	preview: String
}

type BlobDoesNotExistError {
	message: String!
}

type BadTagQuery {
	message: String!
}

type BlobList {
	blobs: [Blob!]!
}

type BlobCount {
	count: Int!
}

union BlobCountResponse = BlobCount | BadTagQuery
union BlobQueryResponse = BlobList | BadTagQuery
union BlobUpdateResponse = Blob | BlobDoesNotExistError | InsufficientPerms

#Resolvers below this line:

extend type Query {
	getBlobs(username: String, start: Int!, count: Int!, tags: String, beginDate: DateTime, endDate: DateTime, name: String): BlobQueryResponse!
	countBlobs(username: String, tags: String, beginDate: DateTime, endDate: DateTime, name: String): BlobCountResponse!
	getBlob(id: String!): Blob
}

extend type Mutation {
	deleteBlob(id: String!): BlobUpdateResponse!
	setBlobTags(id: String!, tags: [String!]!): BlobUpdateResponse!
}