type WeatherUser {
	username: String!
	lat: Float!
	lon: Float!
	max: WeatherTemp_!
	min: WeatherTemp_!
	last_sent: DateTime
	exclude: Boolean!
}

input WeatherUserInput {
	username: String!
	lat: Float!
	lon: Float!
	max: WeatherTemp!
	min: WeatherTemp!
}

type WeatherExecution {
	timestamp: DateTime!
	users: [String!]!
	error: String
}

input WeatherTemp {
	default: Boolean!
	disable: Boolean!
	value: Float!
}

type WeatherTemp_ {
	default: Boolean!
	disable: Boolean!
	value: Float!
}

type WeatherAlert {
	recipient: String!
	message: String!
	sent: DateTime!
}

#Resolvers below this line:

extend type Query {
	getWeatherUsers: [WeatherUser!]!
	getLastWeatherExec: WeatherExecution
	weatherAlertHistory(start: Int!, count: Int!): [WeatherAlert!]!
}

extend type Mutation {
	createWeatherUser(userdata: WeatherUserInput!): UserCreateResponse!
	deleteWeatherUser(username: String!): UserDeleteResponse!
	enableWeatherUser(username: String!): UserUpdateResponse!
	disableWeatherUser(username: String!): UserUpdateResponse!
	updateWeatherUser(userdata: WeatherUserInput!): UserUpdateResponse!
}
